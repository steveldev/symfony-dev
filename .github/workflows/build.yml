name: CI
on:
  push:
    branches:
      - master
jobs:
  symfony:
    name: Symfony 5.2 (PHP ${{ matrix.php-versions }})    
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4', '8.0']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check PHP Version
        run: php -v

      ## —— Yarn ————————————————————————————————————————————————————————————
      - name: Yarn install
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      - run: yarn install    
      - name: Yarn build
        run: yarn run encore production

      # —— Composer  —————————————————————————————————————————————————————————
      #- name: Validate composer.json and composer.lock
        #run: composer validate

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: make install

      # —— Symfony  ——————————————————————————————————————————————————————————
      - name: Check Symfony requirements
        run: vendor/bin/requirements-checker

      - name: Check the Symfony console
        run: bin/console about

      # Can't handle PHP8 for now
      - name: Coding standards checks (php_codesniffer + php-cs-fixer)
        run: make analyze
        if: matrix.php-versions == '7.4'

      ## —— Tests  ———————————————————————————————————————————————————————————
      - name: Load Doctrine fixtures 
        run: make fixtures-test

      - name: Run functionnal and unit tests
        run: 
          ./vendor/bin/phpunit 